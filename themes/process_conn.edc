/*
*
*      process_conn.edc
*
*      Copyright 2008 - 2009 	Valerio Valerio <vdv100@gmail.com>
*						
*
*      This program is free software; you can redistribute it and/or modify
*      it under the terms of the GNU General Public License as published by
*      the Free Software Foundation; either version 2 of the License, or
*      (at your option) any later version.
*
*      This program is distributed in the hope that it will be useful,
*      but WITHOUT ANY WARRANTY; without even the implied warranty of
*      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*      GNU General Public License for more details.
*
*      You should have received a copy of the GNU General Public License
*      along with this program; if not, write to the Free Software
*      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
*/

parts {

	   SWALLOWCLIP();
	   BACKGROUND(0);
	   TOP_BAR();
	   TASK_SWITCHER();
  	   BACK();

	   BOTTOM_BAR_CENTERED()


	part {

	    name: "trying_dialog";					
            type: IMAGE;						
            mouse_events: 0;						
            clip_to: "swallow_clip";   					
            description {						
               state: "default" 0.0;					
               visible: 1;						
               rel1 {							
                  relative: 0.0 0.0;					
                  offset: 100 145;					
               }							
               rel2 {							
                  relative: 0.0 0.0;					
                  offset: 700 278;					
               }							
	      image { normal: "trying_dialog.png"; }                  	
              fill { smooth: 0; } 					
            }								
         }	

	part {								
            name: "trying_cancel";						
            type: IMAGE;						
            mouse_events: 1;						
            clip_to: "swallow_clip";					   
            description {						
               state: "default" 0.0;					
	       visible: 1;						
               rel1 {							
                  relative: 0.0 0.0;					
                  offset: 99 254;					
               }							
               rel2 {							
                  relative: 0.0 0.0;					
                  offset: 700 336;					
               }							
	       image { normal: "trying_released.png.png"; }		                  
               fill { smooth: 0; } 					
            }								
	    description {						
               state: "clicked" 0.0;					
	       inherit: "default" 0.0;                              	
	       image { normal: "trying_pressed.png.png"; }                  
               fill { smooth: 0; } 					
            }								
         }	

	//add cancel here and in the py

	/*
	part {
                name: "label_name";
                type: TEXT;
		effect: SOFT_OUTLINE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1 {
                        relative: 0.25 0.24;
                        offset: 0 0;
                        
                    }
                    rel2 {
                        relative: 0.75 0.84;
                        offset: -1 -1;
                    }
                    text {
                        font: "Sans";
                        size: 1;
                        fit: 1 1;
                        align: 0.50 0.50;
                    }
             }
	}

	part {
                name: "label_connect";
                type: TEXT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1 {
                        relative: 0.20 0.18;
                        offset: 0 0;
                        
                    }
                    rel2 {
                        relative: 0.8 0.68;
                        offset: -1 -1;
                    }
                    text {
                        font: "Sans";
                        size: 1;
                        fit: 1 1;
                        align: 0.27 0.27;
                    }
             }
	}*/
	
    }
    programs {
	ACTIVATE("back");
	ACTIVATE("task_switcher");
    	TRANSITION();
    }

